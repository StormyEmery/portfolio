---
const navLinks = [
  { name: "Home", href: "/" },
  { name: "Projects", href: "#projects" },
  { name: "Contact", href: "#contact" },
];

const socialLinks = [
  {
    name: "LinkedIn",
    href: "https://www.linkedin.com/in/stormyemery", // Replace with your LinkedIn URL
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24"><path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-1.337-.03-3.06-1.867-3.06-1.867 0-2.152 1.458-2.152 2.965v5.699h-3v-11h2.878v1.496h.04c.399-.757 1.376-1.557 2.832-1.557 3.027 0 3.584 1.992 3.584 4.583v6.478z"/></svg>`,
  },
  {
    name: "GitHub",
    href: "https://github.com/StormyEmery", // Replace with your GitHub URL
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24"><path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd"/></svg>`,
  }
];
---

<aside
  id="sidebar"
  class="fixed top-0 left-0 w-64 h-screen bg-gray-800 text-white flex flex-col items-center py-8 transition-transform duration-300 md:translate-x-0 -translate-x-full z-20"
>
  <!-- Headshot and Name -->
  <div class="flex flex-col items-center mb-8">
    <img
      src="/images/headshot.jpg"
      alt="Stormy Emery"
      class="w-28 h-28 rounded-full object-cover border-2 border-blue-400 hover:scale-105 transition-transform duration-300"
    />
    <h1 class="text-2xl font-bold mt-4">Stormy Emery</h1>
  </div>
  <!-- Navigation -->
  <nav class="flex-1 w-full">
    <ul class="space-y-2">
      {navLinks.map((link) => (
        <li>
          <a
            href={link.href}
            class="block w-full text-lg py-3 text-center transition-all duration-200 hover:text-blue-400 active-link"
            data-href={link.href}
          >
            {link.name}
          </a>
        </li>
      ))}
    </ul>
  </nav>
  <!-- Social Links -->
  <div class="mt-8 flex space-x-4">
    {socialLinks.map((link) => (
      <a
        href={link.href}
        target="_blank"
        rel="noopener noreferrer"
        class="text-gray-300 hover:text-blue-400 transition"
        aria-label={link.name}
      >
        <span set:html={link.icon} />
      </a>
    ))}
  </div>
</aside>

<!-- Hamburger Button for Mobile -->
<button
  id="toggle-sidebar"
  class="md:hidden fixed top-4 right-4 z-30 text-white bg-blue-600 p-2 rounded-lg hover:bg-blue-700 transition"
>
  <svg
    class="w-6 h-6"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M4 6h16M4 12h16m-7 6h7"
    ></path>
  </svg>
</button>

<script>
  // Ensure script runs only in browser
  if (typeof window !== "undefined") {
    const sidebar = document.getElementById("sidebar");
    const toggleButton = document.getElementById("toggle-sidebar");

    // Sidebar toggle
    if (toggleButton && sidebar) {
      toggleButton.addEventListener("click", () => {
        sidebar.classList.toggle("-translate-x-full");
      });
    }

    // Handle active link and smooth scrolling
    function setActiveLink(activeHref: string) {
      const links = document.querySelectorAll(".active-link");
      const currentHash = window.location.hash || "";
      const isHome = !currentHash && (window.location.pathname === "/" || window.location.pathname === "");

      // Clear all active styles
      links.forEach((link) => {
        link.classList.remove("bg-gray-700", "text-blue-400");
        link.classList.add("hover:text-blue-400");
      });

      // Set active link
      links.forEach((link) => {
        const href = link.getAttribute("data-href") || "";
        const isActive = (href === "/" && isHome && activeHref === "/") || (href === activeHref && href.startsWith("#"));
        link.classList.toggle("bg-gray-700", isActive);
        link.classList.toggle("text-blue-400", isActive);
        link.classList.toggle("hover:text-blue-400", !isActive);
      });
    }

    // Initialize and update active link on click with smooth scrolling
    const links = sidebar?.querySelectorAll(".active-link") || [];
    links.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault(); // Prevent default jump
        if (sidebar) {
          sidebar.classList.add("-translate-x-full");
        }
        const href = link.getAttribute("data-href") || "";
        
        // Update active state immediately
        links.forEach((l) => {
          l.classList.remove("bg-gray-700", "text-blue-400");
          l.classList.add("hover:text-blue-400");
        });
        if (href === "/" || href.startsWith("#")) {
          link.classList.add("bg-gray-700", "text-blue-400");
          link.classList.remove("hover:text-blue-400");
        }

        // Smooth scroll to section
        if (href === "/") {
          window.scrollTo({ top: 0, behavior: "smooth" });
          window.history.replaceState(null, "", "/");
        } else if (href.startsWith("#")) {
          const targetId = href.substring(1);
          const targetElement = document.getElementById(targetId);
          if (targetElement) {
            targetElement.scrollIntoView({ behavior: "smooth", block: "start" });
            window.history.replaceState(null, "", href);
          }
        }

        // Update active link
        setActiveLink(href);
      });
    });

    // Run on load and hash change
    window.addEventListener("hashchange", () => {
      const currentHash = window.location.hash || "/";
      setActiveLink(currentHash);
    });
    window.addEventListener("load", () => {
      setTimeout(() => {
        const initialHref = window.location.hash || "/";
        setActiveLink(initialHref);
      }, 0);
    });

    // Initial call
    setActiveLink(window.location.hash || "/");
  }
</script>