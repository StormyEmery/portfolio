---
import Layout from '../../layouts/Layout.astro';
import { ftueServiceCode, ftueScreenControllerCode, ftueScreenCode } from '../../data/ftue-snippets.js';

// Define the images for Client FTUE Data section
const ftueDataImages = [
  "/images/ftue_sequence_data.png",
  "/images/ftue_trigger_data.png",
  "/images/ftue_step_data.png",
  "/images/ftue_so.gif"
];

// Define the code snippet images for Client Implementation section
const codeSnippetImages = [
  { src: "/images/ftue_service.png", alt: "FtueService Class Code" },
  { src: "/images/ftue_screen_controller.png", alt: "Screen Controller Code" },
  { src: "/images/ftue_screen.png", alt: "Screen View Code" }
];
---

<Layout title="Prize Kingdoms - Stormy Emery">
  <section class="py-16 bg-gray-900">
    <div class="container mx-auto px-4">
      <!-- Back to Projects Link (Top) -->
      <div class="text-left mb-4">
        <a
          href="/#projects"
          class="inline-block text-blue-400 hover:underline text-lg font-semibold"
        >
          ← Back to Projects
        </a>
      </div>
      <h1 class="text-5xl font-bold text-center mb-8 text-white">Prize Kingdoms</h1>
      <p class="text-lg text-center max-w-prose mx-auto mb-4 text-gray-300">
        Prize Kingdoms is a mobile game I worked on while at INK Games where I focused on full-stack feature development, performance optimizations, and cross-team collaboration. Below, I’ll dive into the details of one of the key features I developed, the first time user experience (FTUE).
      </p>
      <!-- App Store and Google Play Links -->
      <div class="flex justify-center space-x-6 mb-12">
        <a
          href="https://apps.apple.com/us/app/prize-kingdoms/id1554511237"
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center text-blue-400 text-lg font-semibold"
        >
          <i class="fab fa-app-store fa-lg mr-2"></i>
          <span class="hover:underline">App Store</span>
        </a>
        <a
          href="https://play.google.com/store/apps/details?id=com.inkgames.prizekingdoms&hl=en_US"
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center text-blue-400 text-lg font-semibold"
        >
          <i class="fab fa-google-play fa-lg mr-2"></i>
          <span class="hover:underline">Google Play</span>
        </a>
      </div>

      <!-- Overview Section -->
      <div class="mb-16">
        <h2 class="text-3xl font-bold mb-6 text-white">First Time User Experience Overview</h2>
        <p class="text-lg text-gray-300 mb-4">
          The First Time User Experience (FTUE) is crucial for engaging new players. I designed and implemented a comprehensive FTUE system that guides users through the game mechanics, ensuring they understand how to build their kingdoms and participate in challenges. 
          In Prize Kingdoms, the FTUE consists of sequences of steps that the player must complete to progress through the game. Each sequence is triggered by some in game event that the player performs.
        </p>
      </div>

      <!-- Diagrams Section -->
      <div class="mb-16">
        <h2 class="text-3xl font-bold mb-6 text-white">FTUE Server Architecture</h2>
        <p class="text-lg text-gray-300 mb-4">
          These diagrams illustrate the API and server architecture I designed for the first time user experience.
        </p>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div class="bg-white rounded-lg p-4 shadow-lg">
            <img
              src="/images/ftue_api.png"
              alt="Prize Kingdoms API Diagram"
              class="w-full h-auto rounded-lg"
            />
          </div>
          <div class="bg-white rounded-lg p-4 shadow-lg">
            <img
              src="/images/ftue_server.png"
              alt="Prize Kingdoms Server Diagram"
              class="w-full h-auto rounded-lg"
            />
          </div>
        </div>
      </div>

      <!-- Client Data Section -->
      <div class="mb-16">
        <h2 class="text-3xl font-bold mb-6 text-white">Client FTUE Data</h2>
        <p class="text-lg text-gray-300 mb-4">
          The FTUE sequences are defined on the client and are represented by scriptable objects. Each sequence is a scriptable object that contains references to a trigger scriptable object and a list of step scriptable objects. 
          The sequence scriptable object is pretty straightforward, but the trigger and step scriptable objects required custom editor code. 
          I needed to be able to have a generic list of variables that could be any defined type I needed. Below you will find a couple of screenshots as well as a gif to demostrate the various data objects.
        </p>
        <!-- Image Carousel -->
        <div class="swiper ftue-data-carousel">
          <div class="swiper-wrapper">
            {ftueDataImages.map((image) => (
              <div class="swiper-slide">
                <img
                  src={image}
                  alt={image.includes("ftue_sequence_data") ? "Prize Kingdoms Sequence Scriptable Object" : image.includes("ftue_trigger_data") ? "Prize Kingdoms Trigger Scriptable Object" : image.includes("ftue_step_data") ? "Prize Kingdoms Step Scriptable Object" : "Prize Kingdoms Generic Variable List Demo"}
                  class="w-full rounded-lg shadow-lg cursor-pointer"
                  data-lightbox-src={image}
                />
              </div>
            ))}
          </div>
          <!-- Navigation Buttons -->
          <div class="swiper-button-prev hidden md:block"></div>
          <div class="swiper-button-next hidden md:block"></div>
          <!-- Pagination Dots -->
          <div class="swiper-pagination"></div>
        </div>
      </div>

      <!-- Client Implementation Section -->
      <div class="mb-16">
        <h2 class="text-3xl font-bold mb-6 text-white">Client Implementation</h2>
        <p class="text-lg text-gray-300 mb-4">
          The FTUE runs inside of an Update loop inside of a pure .NET class, `FtueService`. It takes the next available sequence (if there is one) and awaits on the specified UniTaskCompletionSource to be completed. 
          Once it is, the sequence commences and the steps (tasks) are ran. The visuals of the FTUE are implemented using MVC principles where there's a screen controller that builds and runs sub-tasks, that based off a data model, makes changes to the view (prefab). 
          The view scripts are very minimal and just have accessors to needed properties.
        </p>
        <div class="space-y-8">
          <!-- FTUE Flow Diagram (Full Width) -->
          <div class="bg-white rounded-lg p-4 shadow-lg max-w-2xl mx-auto">
            <img
              src="/images/ftue_flow.png"
              alt="Prize Kingdoms FTUE Flow Diagram"
              class="w-full h-auto rounded-lg"
            />
          </div>
          <!-- Code Snippets in a Slider -->
          <div class="swiper code-snippets-carousel">
            <div class="swiper-wrapper">
              {codeSnippetImages.map((snippet) => (
                <div class="swiper-slide">
                  <img
                    src={snippet.src}
                    alt={snippet.alt}
                    class="w-full rounded-lg shadow-lg cursor-pointer"
                    data-lightbox-src={snippet.src}
                  />
                </div>
              ))}
            </div>
            <!-- Navigation Buttons -->
            <div class="swiper-button-prev hidden md:block"></div>
            <div class="swiper-button-next hidden md:block"></div>
            <!-- Pagination Dots -->
            <div class="swiper-pagination"></div>
          </div>
        </div>
      </div>

      <!-- Video Section -->
      <div class="mb-16">
        <h2 class="text-3xl font-bold mb-6 text-white">FTUE Demo</h2>
        <p class="text-lg text-gray-300 mb-4">
          This video provides a small snippet of the FTUE in action. It showcases the various steps and how they are triggered by player actions.
        </p>
        <div class="relative w-full max-w-4xl mx-auto rounded-lg shadow-lg overflow-hidden">
          <video id="ftue-demo-video" controls class="w-full max-h-[1000px] object-contain" preload="metadata">
            <source src="/videos/ftue.mp4" type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </div>
      </div>

      <!-- Back to Projects Link -->
      <div class="text-center">
        <a
          href="/#projects"
          class="inline-block bg-blue-600 text-white py-3 px-8 rounded-lg hover:bg-blue-700 hover:scale-105 transition-transform duration-300"
        >
          Back to Projects
        </a>
      </div>
    </div>
  </section>

  <!-- Lightbox Modal -->
  <div id="lightbox" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 hidden">
    <span id="lightbox-close" class="absolute top-4 right-4 text-white text-3xl cursor-pointer">×</span>
    <img id="lightbox-image" class="max-w-[90%] max-h-[90%] rounded-lg" src="" alt="Enlarged view" />
  </div>

  <!-- Initialize Swiper Carousels, Lightbox, and Video -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // FTUE Data Carousel
      new Swiper(".ftue-data-carousel", {
        effect: "coverflow",
        grabCursor: true,
        centeredSlides: true,
        slidesPerView: "auto",
        spaceBetween: 0,
        coverflowEffect: {
          rotate: 50,
          stretch: 0,
          depth: 100,
          modifier: 1,
          slideShadows: true,
        },
        speed: 300,
        threshold: 10,
        loop: false,
        breakpoints: {
          0: { // Mobile (below 768px)
            effect: "slide",
            slidesPerView: 1,
            spaceBetween: 20,
            loop: false,
          },
          768: { // Desktop (768px and above)
            effect: "coverflow",
            slidesPerView: "auto",
            spaceBetween: 0,
            loop: true,
          },
        },
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
        pagination: {
          el: ".swiper-pagination",
          clickable: true,
          type: "bullets",
        },
      });

      // Code Snippets Slider
      new Swiper(".code-snippets-carousel", {
        effect: "slide",
        grabCursor: true,
        centeredSlides: true,
        slidesPerView: 1,
        spaceBetween: 20,
        speed: 300,
        threshold: 10,
        loop: false,
        breakpoints: {
          0: { // Mobile (below 768px)
            loop: false,
          },
          768: { // Desktop (768px and above)
            slidesPerView: 1.2,
            spaceBetween: 20,
            loop: true,
          },
        },
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
        pagination: {
          el: ".swiper-pagination",
          clickable: true,
          type: "bullets",
        },
      });

      // Lightbox functionality
      const lightbox = document.getElementById("lightbox");
      const lightboxImage = document.getElementById("lightbox-image");
      const lightboxClose = document.getElementById("lightbox-close");
      const images = document.querySelectorAll("[data-lightbox-src]");

      images.forEach((image) => {
        image.addEventListener("click", () => {
          if (lightboxImage) {
            (lightboxImage as HTMLImageElement).src = image.getAttribute("data-lightbox-src") || "";
          }
          if (lightbox) {
            lightbox.classList.remove("hidden");
          }
        });
      });

      if (lightboxClose) {
        lightboxClose.addEventListener("click", () => {
          if (lightbox) {
            lightbox.classList.add("hidden");
          }
        });
      }

      if (lightbox) {
        lightbox.addEventListener("click", (e) => {
          if (e.target === lightbox) {
            lightbox.classList.add("hidden");
          }
        });
      }

      // Force video metadata load to display first frame
      const video = document.getElementById("ftue-demo-video") as HTMLVideoElement;
      if (video) {
        video.load();
      }
    });
  </script>

  <!-- Swiper Custom Styles -->
  <style>
    .swiper {
      width: 100%;
      padding: 20px 0;
    }
    .swiper-slide {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .swiper-button-prev,
    .swiper-button-next {
      color: #3b82f6; /* Tailwind's blue-400 */
      width: 44px;
      height: 44px;
    }
    .swiper-button-prev:hover,
    .swiper-button-next:hover {
      color: #ffffff; /* White on hover */
    }
    /* Adjust width for code snippets carousel */
    .code-snippets-carousel .swiper-slide {
      width: 100%;
    }
    @media (min-width: 768px) {
      .swiper-slide {
        width: 600px;
      }
      .code-snippets-carousel .swiper-slide {
        width: 800px;
      }
    }
    /* Ensure pagination dots are below content */
    .ftue-data-carousel {
      padding-bottom: 60px;
    }
    .code-snippets-carousel {
      padding-bottom: 60px;
    }
    .swiper-pagination {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      text-align: center;
    }
    .swiper-pagination-bullet {
      background: #d1d5db; /* Tailwind's gray-300 */
      opacity: 0.7;
      width: 10px;
      height: 10px;
      margin: 0 4px;
    }
    .swiper-pagination-bullet-active {
      background: #3b82f6; /* Tailwind's blue-400 */
      opacity: 1;
    }

  </style>
</Layout>