---
import Layout from '../../layouts/Layout.astro';
import projects from '../../data/projects.js';

// Define getStaticPaths to generate dynamic routes
export function getStaticPaths() {
  // Exclude Prize Kingdoms since it has a dedicated page
  const projectPaths = projects
    .filter((project) => project.id !== "prize-kingdoms")
    .map((project) => ({
      params: { id: project.id }
    }));
  return projectPaths;
}

// Get the project ID from the URL
const { id } = Astro.params;

// Find the project by ID
const project = projects.find((p) => p.id === id);

if (!project) {
  return Astro.redirect('/404');
}
---

<Layout title={`${project.title} - Stormy Emery`}>
  <section class="py-16 bg-gray-900">
    <div class="container mx-auto px-4">
      <!-- Back to Projects Link (Top) -->
      <div class="text-left mb-4">
        <a
          href="/#projects"
          class="inline-block text-blue-400 hover:underline text-lg font-semibold"
        >
          ‚Üê Back to Projects
        </a>
      </div>
      <h1 class="text-5xl font-bold text-center mb-8 text-white">{project.title}</h1>
      <p class="text-lg text-center max-w-prose mx-auto mb-4 text-gray-300">
        {project.description}
      </p>
      <!-- External Links -->
      {project.externalLinks && project.externalLinks.length > 0 && (
        <div class="flex justify-center space-x-6 mb-12">
          {project.externalLinks.map((externalLink) => (
            <a
              href={externalLink.url}
              target="_blank"
              rel="noopener noreferrer"
              class="flex items-center text-blue-400 text-lg font-semibold"
            >
              <i class={`${externalLink.type === "ios" ? "fab fa-app-store" : externalLink.type === "google" ? "fab fa-google-play" : externalLink.type === "github" ? "fab fa-github" : "fas fa-link"} fa-lg mr-2`}></i>
              <span class="hover:underline">
                {externalLink.type === "ios" ? "App Store" : externalLink.type === "google" ? "Google Play" : externalLink.type === "github" ? "GitHub" : "Website"}
              </span>
            </a>
          ))}
        </div>
      )}

      <!-- Project Details -->
      <div class="mb-16">
        <h2 class="text-3xl font-bold mb-6 text-white">Details</h2>
        <p class="text-lg text-gray-300 mb-4">{project.details}</p>
        <p class="text-lg text-gray-300">
          <strong>Tech Stack:</strong> {project.tech.join(", ")}
        </p>
      </div>

      <!-- Media Section -->
      {((project.images?.length ?? 0) > 0 || (project.videos?.length ?? 0) > 0) && (
        <div class="mb-16">
          <h2 class="text-3xl font-bold mb-6 text-white">Media</h2>
          <!-- Images: Carousel if 3 or more, Flex for 1, Grid for 2 -->
          {project.images && project.images.length > 0 && (
            <>
              {project.images.length >= 3 ? (
                <div class="swiper project-carousel mb-8">
                  <div class="swiper-wrapper">
                    {project.images.map((image) => (
                      <div class="swiper-slide">
                        <img
                          src={image}
                          alt={`${project.title} Screenshot`}
                          class="w-full rounded-lg shadow-lg object-contain cursor-pointer"
                          data-lightbox-src={image}
                        />
                      </div>
                    ))}
                  </div>
                  <!-- Navigation Buttons -->
                  <div class="swiper-button-prev"></div>
                  <div class="swiper-button-next"></div>
                  <!-- Pagination Dots -->
                  <div class="swiper-pagination"></div>
                </div>
              ) : project.images.length === 1 ? (
                <div class="flex justify-center mb-8">
                  <img
                    src={project.images[0]}
                    alt={`${project.title} Screenshot`}
                    class="max-w-lg mx-auto rounded-lg shadow-lg"
                  />
                </div>
              ) : (
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8 flex justify-center text-center">
                  {project.images.map((image) => (
                    <img
                      src={image}
                      alt={`${project.title} Screenshot`}
                      class="max-w-3xl mx-auto rounded-lg shadow-lg"
                    />
                  ))}
                </div>
              )}
            </>
          )}
          <!-- Videos -->
          {project.videos && project.videos.length > 0 && (
            <div class={`grid ${project.videos.length === 1 ? 'grid-cols-1' : 'grid-cols-1 md:grid-cols-2'} gap-8`}>
              {project.videos.map((video) => (
                <div class="relative w-full max-w-4xl mx-auto rounded-lg shadow-lg overflow-hidden">
                  <video controls class="w-full max-h-[600px] object-contain">
                    <source src={video} type="video/mp4" />
                    Your browser does not support the video tag.
                  </video>
                </div>
              ))}
            </div>
          )}
        </div>
      )}

      <!-- Back to Projects Link -->
      <div class="text-center">
        <a
          href="/#projects"
          class="inline-block bg-blue-600 text-white py-3 px-8 rounded-lg hover:bg-blue-700 hover:scale-105 transition-transform duration-300"
        >
          Back to Projects
        </a>
      </div>
    </div>
  </section>

  <!-- Lightbox Modal -->
  <div id="lightbox" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 hidden">
    <span id="lightbox-close" class="absolute top-4 right-4 text-white text-3xl cursor-pointer">&times;</span>
    <img id="lightbox-image" class="max-w-[90%] max-h-[90%] rounded-lg" src="" alt="Enlarged view" />
  </div>

  <!-- Initialize Swiper Carousel and Lightbox (only if needed) -->
  {project.images && project.images.length >= 3 && (
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // Initialize Swiper
        new Swiper(".project-carousel", {
          effect: "coverflow",
          grabCursor: true,
          centeredSlides: true,
          slidesPerView: "auto",
          coverflowEffect: {
            rotate: 50,
            stretch: 0,
            depth: 100,
            modifier: 1,
            slideShadows: true,
          },
          navigation: {
            nextEl: ".swiper-button-prev",
            prevEl: ".swiper-button-next",
          },
          pagination: {
            el: ".swiper-pagination",
            clickable: true,
          },
          loop: true,
        });

        // Lightbox functionality
        const lightbox = document.getElementById("lightbox");
        const lightboxImage = document.getElementById("lightbox-image");
        const lightboxClose = document.getElementById("lightbox-close");
        const images = document.querySelectorAll("[data-lightbox-src]");

        images.forEach((image) => {
          image.addEventListener("click", () => {
            if (lightboxImage) {
              (lightboxImage as HTMLImageElement).src = image.getAttribute("data-lightbox-src") || "";
            }
            if (lightbox) {
              lightbox.classList.remove("hidden");
            }
          });
        });

        if (lightboxClose) {
          lightboxClose.addEventListener("click", () => {
            if (lightbox) {
              lightbox.classList.add("hidden");
            }
          });
        }

        if (lightbox) {
          lightbox.addEventListener("click", (e) => {
            if (e.target === lightbox) {
              lightbox.classList.add("hidden");
            }
          });
        }
      });
    </script>
  )}

  <!-- Swiper Custom Styles -->
  <style>
    .swiper {
      width: 100%;
      padding: 20px 0;
      position: relative;
    }
    .swiper-slide {
      width: 800px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .swiper-button-prev,
    .swiper-button-next {
      color: #3b82f6; /* Tailwind's blue-400 */
    }
    .swiper-button-prev:hover,
    .swiper-button-next:hover {
      color: #ffffff; /* White on hover */
    }
    /* Style pagination dots */
    .project-carousel {
      padding-bottom: 60px;
    }
    .swiper-pagination {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      text-align: center;
    }
    .swiper-pagination-bullet {
      background: #d1d5db; /* Tailwind's gray-300 */
      opacity: 0.7;
    }
    .swiper-pagination-bullet-active {
      background: #3b82f6; /* Tailwind's blue-400 */
      opacity: 1;
    }
  </style>
</Layout>